Final_dataset$Numerator <- as.numeric(Final_dataset$Numerator)
#checking correlation
library(corrplot)
library(ggplot2)
library(httpuv)
library(Hmisc)
library(DataExplorer)
library(plotly)
plot_histogram(Final_dataset)
densityplot(Final_dataset$Numerator)
corrplot(cor(Final_dataset[,c(2:14,18)]), method = "number")
#plot the scatter plot with all variables
plot(Numerator ~ . , data = Final_dataset)
corrplot(cor(df), method = "number")
sapply(df,function(x) sum(is.na(x)))
str(df)
class(df)
set.seed(1337)
index <- sample(1:dim(df)[1], dim(df)[1] * .75, replace=FALSE)
training <- df[index, ]
testing <- df[-index, ]
model1 <- lm(Numerator ~ CO_concentration_value+O3_concentration_value+PM2.5_concentration_value+PM10_concentration_value, data = training)
summary(model1)
predictions <- model1 %>% predict(testing)
abline(model1)
car::vif(model1)
library(fmsb)
VIF(lm(Numerator ~ ., data=df))
VIF(lm(PM2.5_concentration_value ~ ., data=df))
VIF(lm(CO_concentration_value ~ ., data=df))
#correlation with transfromed variables
Final_dataset$NumeratorTransformed <- log(Final_dataset$Numerator^1/8)
plot(density(log(Final_dataset$NumeratorTransformed)))
plot(density(1/Final_dataset$Numerator))
corrplot(cor(Final_dataset[,c(2:14,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
#checking outliers with target variables
boxplot(Final_dataset$PM10_concentration_value)
boxplot(Final_dataset$NumeratorTransformed)
boxplot(Final_dataset)
boxplot[data$CO_concentration_value]$out
boxplot(data$CO_concentration_value),out
boxplot(data$CO_concentration_value)out
boxplot[(data$CO_concentration_value)$out]
[boxplot(data$CO_concentration_value)$out]
boxplot[(data$CO_concentration_value)$out]
boxplot[(data$CO_concentration_value)out]
`$.function` <- `$.closure` <- function(func, arg_name) {
func[as.character(substitute(arg_name))]
}
boxplot(data$CO_concentration_value)$out
`[<-.function` <- `[<-.closure` <- function(func, arg_name, value) {
fargs             <- formals(func)
fargs[[arg_name]] <- value
formals(func)     <- fargs
func
}
boxplot(data$CO_concentration_value)$out
boxplot(data$CO_concentration_value, plot=FALSE)$out
install.packages("shiny")
library(shiny)
boxplot(data$CO_concentration_value)$out
boxplot(rnoms(data$CO_concentration_value)$out)
x[!x %in% boxplot.stats(x)$out]
Final_dataset$CO_Transformed <- log(Final_dataset$CO_concentration_value)
boxplot(Final_dataset$CO_Transformed)
boxplot(Final_dataset$CO_concentration_value)
boxplot(Final_dataset$CO_Transformed)
Final_dataset$CO_Transformed <- log(Final_dataset$CO_concentration_value^1/8)
boxplot(Final_dataset$CO_Transformed)
boxplot(Final_dataset$CO_concentration_value)
Final_dataset$CO_Transformed <- log(Final_dataset$CO_concentration_value)
data <- Final_dataset
length(data)
summary(data)
bench_CO <- 0.5316 + 1.5*IQR(data$CO_concentration_value)
bench_CO
data[data > 0.728]
data[data < 0.728]
OutVals = boxplot(data$CO_Transformed)$out
which(x %in% OutVals)
which(data$CO_Transformed %in% OutVals)
A <- which(data$CO_Transformed %in% OutVals)
boxplot(A)
boxplot(data$CO_concentration_value)
OutVals = boxplot(data$CO_concentration_value)$out
A <- which(data$ %in% OutVals)
A <- which(data$CO_concentration_value %in% OutVals)
boxplot(A)
corrplot(cor(data[,c(2:14,19)]), method = "number")
corrplot(cor(data[,c(2:12,19)]), method = "number")
corrplot(cor(data[,c(3:12,19)]), method = "number")
data$CO_concentration_value <- which(data$CO_concentration_value %in% OutVals)
data<- which(data$CO_concentration_value %in% OutVals)
corrplot(cor(data[,c(3:12,19)]), method = "number")
data <- Final_dataset
length(data)
summary(data)
boxplot(data$CO_concentration_value)
OutVals = boxplot(data$CO_concentration_value)$out
A <- which(data$CO_concentration_value %in% OutVals)
boxplot(A)
A
corrplot(cor(data[A,c(3:12,19)]), method = "number")
corrplot(cor(data[A,data$NumeratorTransformed]), method = "number")
boxplot(data$CO_concentration_value)
OutVals = boxplot(data$CO_concentration_value)$out
A <- which(data$CO_concentration_value %in% OutVals)
boxplot(A)
OutVals
boxplot(OutVals)
OutVals = boxplot(data$CO_concentration_value)
OutVals
length(data)
?length
OutVals = boxplot(data$CO_concentration_value, plot=FALSE)$out
OutVals
A <- which(data$CO_concentration_value %in% OutVals)
boxplot(OutVals)
boxplot(A)
OutVals = boxplot(data$CO_concentration_value, plot=FALSE)$out
boxplot(data$CO_concentration_value)
OutVals = boxplot(data$CO_concentration_value, plot=FALSE)$out
A <- which(data$CO_concentration_value %in% OutVals)
boxplot(A)
corrplot(cor(data[,c(3:12,19)]), method = "number")
corrplot(cor(data[A,data$NumeratorTransformed), method = "number")
corrplot(cor(A,data$NumeratorTransformed), method = "number")
data$A <- A
boxplot(data)
OutVals = boxplot(data, plot=FALSE)$out
A <- which(data %in% OutVals)
boxplot(A)
A <- which(data %in% OutVals)
boxplot(A)
A
which(data %in% OutVals)
OutVals
cor(OutVals)
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets")
asthma <- read.csv("asthma-ed-visit-rates-lghc-indicator-07.csv", header=T, na.strings=c(""), stringsAsFactors = T)
asthma_gender <- subset(asthma, Strata == "Sex")
asthma_gender <- asthma_gender[ ,-c(7)]
asthma_gender$Numerator <- gsub(',', '', asthma_gender$Numerator)
asthma_gender$Numerator[is.na(asthma_gender$Numerator)] <- 0
asthma_gender$Year <- as.character(asthma_gender$Year)
asthma_gender$Year <- as.integer(asthma_gender$Year)
colnames(asthma_gender) <- c("county", "year","Age_Group","Strata","Strata_Name","Numerator")
str(asthma_gender)
sapply(asthma_gender,function(x) sum(is.na(x)))
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets/air_pollution_data/FINAL_DATASETS")
temp = list.files(pattern = "*.csv")
myfiles = lapply(temp, read.delim)
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
air_pollution <- rbind(butte.csv,conta_costa.csv,fresno.csv,humboldt.csv,imperial.csv,los_angeles.csv,marin.csv,monterey.csv,orange.csv,river_side.csv,sacramento.csv,sandiego.csv,sanfrancisco.csv,sanjoquin.csv,santaclara.csv,solano.csv,sonamo.csv)
str(air_pollution)
sapply(air_pollution,function(x) sum(is.na(x)))
Final_dataset <- merge(air_pollution,asthma_gender,by = c("county","year"))
str(Final_dataset)
Final_dataset <- Final_dataset[ ,-c(3)]
table(Final_dataset$county)
table(Final_dataset$year)
Final_dataset$Numerator <- as.numeric(Final_dataset$Numerator)
#checking correlation
library(corrplot)
library(ggplot2)
library(httpuv)
library(Hmisc)
library(DataExplorer)
library(plotly)
plot_histogram(Final_dataset)
densityplot(Final_dataset$Numerator)
corrplot(cor(Final_dataset[,c(2:14,18)]), method = "number")
#plot the scatter plot with all variables
plot(Numerator ~ . , data = Final_dataset)
corrplot(cor(Final_dataset[,c(2:14,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
pairs(Final_dataset,panel=panel.smooth)
corrplot(cor(Final_dataset[,c(2:14,18)]), method = "number")
#plot the scatter plot with all variables
plot(Numerator ~ . , data = Final_dataset)
pairs(Numerator ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
#correlation with transfromed variables
Final_dataset$NumeratorTransformed <- log(Final_dataset$Numerator^1/8)
plot(density(log(Final_dataset$NumeratorTransformed)))
plot(density(1/Final_dataset$Numerator))
corrplot(cor(Final_dataset[,c(2:14,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
corrplot(cor(Final_dataset[,c(2:12,19)]), method = "number")
corrplot(cor(Final_dataset[,c(2:12,18,19)]), method = "number")
#correlation with transfromed variables
Final_dataset$NumeratorTransformed <- log(Final_dataset$Numerator^1/14)
plot(density(log(Final_dataset$NumeratorTransformed)))
plot(density(1/Final_dataset$Numerator))
corrplot(cor(Final_dataset[,c(2:12,18,19)]), method = "number")
#correlation with transfromed variables
Final_dataset$NumeratorTransformed <- log(Final_dataset$Numerator^8)
corrplot(cor(Final_dataset[,c(2:12,18,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
pairs(Final_dataset,panel=panel.smooth)
pairs(data,upper.panel=panel.smooth,pch=".", span=0.1,col.line="blue")
pairs(Final_dataset,upper.panel=panel.smooth,pch=".", span=0.1,col.line="blue")
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset
library(psych)
install.packages("psych")
library(psych)
pairs.panels(data, gap = 0, bg = c("red", "yellow", "blue")[data$NumeratorTransformed], pch = 21)
str(Final_dataset)
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(2:12,18,19)]
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(3:12,18,19)]
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(3,5,7,9,11,18,19)]
library(psych)
pairs.panels(data, gap = 0, bg = c("red", "yellow", "blue")[data$NumeratorTransformed], pch = 21)
set.seed(1337)
index <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
training_pc <- df[index, ]
testing_pc <- df[-index, ]
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(3,5,7,9,11,19)]
str(data)
library(psych)
pairs.panels(data, gap = 0, bg = c("red", "yellow", "blue")[data$NumeratorTransformed], pch = 21)
set.seed(1337)
index <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
training_pc <- df[index, ]
testing_pc <- df[-index, ]
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(3,5,7,9,11,19)]
str(data)
library(psych)
pairs.panels(data, gap = 0, bg = c("red", "yellow", "blue")[data$NumeratorTransformed], pch = 21)
set.seed(1337)
index <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
training_pc <- df[index, ]
training_pc <- data[index, ]
testing_pc <- data[-index, ]
pc <- prcomp(training_pc[,-19], center = TRUE, scale. = TRUE)
attributes(pc)
pc$center
pc$scale
print(pc)
summary(pc)
#orthogonality of pcs
pairs.panels(pc$x, gap = 0, bg = c("red", "yellow", "blue")[training_pc$NumeratorTransformed])
#Bi-plot
library(devtools)
install.packages("devtools")
#Bi-plot
library(devtools)
install.packages("devtools")
#Bi-plot
library(devtools)
install.packages("usethis")
library(usethis)
install.packages("ggbiplot")
install.packages("ggplot2")
library(ggplot2)
install_github("ggbiplot", "vqv")
install_github("ggbiplot", "vqv")
str(training_pc)
pc <- prcomp(training_pc[,-6], center = TRUE, scale. = TRUE)
attributes(pc)
pc$center
pc$scale
print(pc)
summary(pc)
#orthogonality of pcs
pairs.panels(pc$x, gap = 0, bg = c("red", "yellow", "blue")[training_pc$NumeratorTransformed])
install_github("ggbiplot")
install_github('ggbiplot')
#orthogonality of pcs
pairs.panels(pc$x, gap = 0, bg = c("red", "yellow", "blue")[training_pc$NumeratorTransformed])
library(ggbiplot)
#Bi-plot
library(devtools)
library(usethis)
library(ggplot2)
boxplot(Final_dataset)
#orthogonality of pcs
pairs.panels(pc$x, gap = 0, bg = c("red", "yellow", "blue")[training_pc$NumeratorTransformed])
pc$center
pc$scale
print(pc)
summary(pc)
#scree plot
plot(pc, type = "l")
print(pc$rotation)
eigen(cor(data))$value
diag(var(pc$x[,]))
cor(pc$x)
data_pca <- cbind(data[,6],data.frame(pc$x))
data_pca <- cbind(data[,1],data.frame(pc$x))
pc <- cbind(data[,1],data.frame(pc$x))
data_pca <- cbind(pc[,1],data.frame(pc$x))
str(data)
data_pca <- cbind(data[,1],data.frame(pc$x))
data_pca <- cbind(data[,1],data.frame(pc$x))
eigen(cor(data))$value
#scree plot
plot(pc, type = "l")
#scree plot
plot(pc, type = "line")
#scree plot
plot(pc, type = "bar")
#scree plot
plot(pc, type = "line")
summary(pc)
pairs(Final_dataset,panel=panel.smooth)
pairs(Final_dataset,upper.panel=panel.smooth,pch=".", span=0.1,col.line="blue")
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets")
asthma <- read.csv("asthma-ed-visit-rates-lghc-indicator-07.csv", header=T, na.strings=c(""), stringsAsFactors = T)
asthma_gender <- subset(asthma, Strata == "Sex")
asthma_gender <- asthma_gender[ ,-c(7)]
asthma_gender$Numerator <- gsub(',', '', asthma_gender$Numerator)
asthma_gender$Numerator[is.na(asthma_gender$Numerator)] <- 0
asthma_gender$Year <- as.character(asthma_gender$Year)
asthma_gender$Year <- as.integer(asthma_gender$Year)
colnames(asthma_gender) <- c("county", "year","Age_Group","Strata","Strata_Name","Numerator")
str(asthma_gender)
sapply(asthma_gender,function(x) sum(is.na(x)))
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets/air_pollution_data/FINAL_DATASETS")
temp = list.files(pattern = "*.csv")
myfiles = lapply(temp, read.delim)
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
air_pollution <- rbind(butte.csv,conta_costa.csv,fresno.csv,humboldt.csv,imperial.csv,los_angeles.csv,marin.csv,monterey.csv,orange.csv,river_side.csv,sacramento.csv,sandiego.csv,sanfrancisco.csv,sanjoquin.csv,santaclara.csv,solano.csv,sonamo.csv)
str(air_pollution)
sapply(air_pollution,function(x) sum(is.na(x)))
Final_dataset <- merge(air_pollution,asthma_gender,by = c("county","year"))
str(Final_dataset)
Final_dataset <- Final_dataset[ ,-c(3)]
table(Final_dataset$county)
table(Final_dataset$year)
Final_dataset$Numerator <- as.numeric(Final_dataset$Numerator)
#checking correlation
library(corrplot)
library(ggplot2)
library(httpuv)
library(Hmisc)
library(DataExplorer)
library(plotly)
plot_histogram(Final_dataset)
densityplot(Final_dataset$Numerator)
corrplot(cor(Final_dataset[,c(2:14,18)]), method = "number")
#plot the scatter plot with all variables
plot(Numerator ~ . , data = Final_dataset)
plot(density(1/Final_dataset$Numerator))
corrplot(cor(Final_dataset[,c(2:12,18,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
pairs(Final_dataset,panel=panel.smooth)
pairs(Final_dataset,upper.panel=panel.smooth,pch=".", span=0.1,col.line="blue")
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets")
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets")
asthma <- read.csv("asthma-ed-visit-rates-lghc-indicator-07.csv", header=T, na.strings=c(""), stringsAsFactors = T)
asthma_gender <- subset(asthma, Strata == "Sex")
asthma_gender <- asthma_gender[ ,-c(7)]
asthma_gender$Numerator <- gsub(',', '', asthma_gender$Numerator)
asthma_gender$Numerator[is.na(asthma_gender$Numerator)] <- 0
asthma_gender$Year <- as.character(asthma_gender$Year)
asthma_gender$Year <- as.integer(asthma_gender$Year)
colnames(asthma_gender) <- c("county", "year","Age_Group","Strata","Strata_Name","Numerator")
str(asthma_gender)
sapply(asthma_gender,function(x) sum(is.na(x)))
setwd("C:/Users/Imtiyaz/Desktop/Research_computing/Data Sets/air_pollution_data/FINAL_DATASETS")
temp = list.files(pattern = "*.csv")
myfiles = lapply(temp, read.delim)
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
air_pollution <- rbind(butte.csv,conta_costa.csv,fresno.csv,humboldt.csv,imperial.csv,los_angeles.csv,marin.csv,monterey.csv,orange.csv,river_side.csv,sacramento.csv,sandiego.csv,sanfrancisco.csv,sanjoquin.csv,santaclara.csv,solano.csv,sonamo.csv)
str(air_pollution)
sapply(air_pollution,function(x) sum(is.na(x)))
Final_dataset <- merge(air_pollution,asthma_gender,by = c("county","year"))
str(Final_dataset)
Final_dataset <- Final_dataset[ ,-c(3)]
table(Final_dataset$county)
table(Final_dataset$year)
Final_dataset$Numerator <- as.numeric(Final_dataset$Numerator)
#checking correlation
library(corrplot)
library(ggplot2)
library(httpuv)
library(Hmisc)
library(DataExplorer)
library(plotly)
plot_histogram(Final_dataset)
densityplot(Final_dataset$Numerator)
corrplot(cor(Final_dataset[,c(2:14,18)]), method = "number")
#plot the scatter plot with all variables
plot(Numerator ~ . , data = Final_dataset)
plot(Final_dataset$CO_concentration_value, Final_dataset$Numerator)
plot(Final_dataset$CO_AQI, Final_dataset$Numerator)
plot(Final_dataset$NO2_concentration_value, Final_dataset$Numerator)
plot(Final_dataset$NO2_AQI, Final_dataset$Numerator)
plot(Final_dataset$O3_concentration_value, Final_dataset$Numerator)
plot(Final_dataset$O3_AQI, Final_dataset$Numerator)
plot(Final_dataset$PM10_concentration_value, Final_dataset$Numerator)
plot(Final_dataset$PM10_AQI, Final_dataset$Numerator)
plot(Final_dataset$PM2.5_concentration_value, Final_dataset$Numerator)
plot(Final_dataset$PM2.5_AQI, Final_dataset$Numerator)
pairs(Numerator ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
#correlation with transfromed variables
Final_dataset$NumeratorTransformed <- log(Final_dataset$Numerator^8)
plot(density(log(Final_dataset$NumeratorTransformed)))
plot(density(1/Final_dataset$Numerator))
corrplot(cor(Final_dataset[,c(2:12,18,19)]), method = "number")
pairs(NumeratorTransformed ~ NO2_concentration_value+PM2.5_concentration_value+PM10_concentration_value+CO_concentration_value+O3_concentration_value ,data=Final_dataset,
main="Simple Scatterplot Matrix")
pairs(Final_dataset,panel=panel.smooth)
pairs(Final_dataset,upper.panel=panel.smooth,pch=".", span=0.1,col.line="blue")
#linear regression
df <- Final_dataset[,c(2:12,18,19)]
cor(log2(df))
corrplot(cor(df), method = "number")
sapply(df,function(x) sum(is.na(x)))
str(df)
class(df)
set.seed(1337)
index <- sample(1:dim(df)[1], dim(df)[1] * .75, replace=FALSE)
training <- df[index, ]
testing <- df[-index, ]
model1 <- lm(NumeratorTransformed ~ CO_concentration_value+O3_concentration_value+PM2.5_concentration_value+PM10_concentration_value, data = training)
summary(model1)
predictions <- model1 %>% predict(testing)
abline(model1)
car::vif(model1)
library(fmsb)
VIF(lm(Numerator ~ ., data=df))
VIF(lm(PM2.5_concentration_value ~ ., data=df))
VIF(lm(CO_concentration_value ~ ., data=df))
#checking outliers with target variables
boxplot(Final_dataset$PM10_concentration_value)
boxplot(Final_dataset$NumeratorTransformed)
boxplot(Final_dataset$CO_Transformed)
boxplot(Final_dataset$CO_concentration_value)
boxplot(Final_dataset)
#-------------------------------------------------------------------------------------------------
# PCA analysis
data <- Final_dataset[,c(3,5,7,9,11,19)]
str(data)
library(psych)
pairs.panels(data, gap = 0, bg = c("red", "yellow", "blue")[data$NumeratorTransformed], pch = 21)
set.seed(1337)
index <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
training_pc <- data[index, ]
index_pc <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
index_pc <- sample(1:dim(data)[1], dim(data)[1] * .75, replace=FALSE)
training_pc <- data[index_pc, ]
testing_pc <- data[-index_pc, ]
str(training_pc)
pc <- prcomp(training_pc[,-6], center = TRUE, scale. = TRUE)
attributes(pc)
pc$center
pc$scale
print(pc)
#rotation matrix
print(pc$rotation)
#scree plot
plot(pc, type = "line")
summary(pc)
eigen(cor(data))$value
diag(var(pc$x[,]))
cor(pc$x)
data_pca <- cbind(data[,1],data.frame(pc$x))
install_github("vqv/ggbiplot")
install.packages("rlang")
install_github("vqv/ggbiplot")
library(rlang)
install.packages("rlang")
install.packages("rlang")
library(rlang)
install_github("vqv/ggbiplot")
install_github("vqv/ggbiplot")
#------------------------------------------------------------------------------------------------
library(GAMBoost)
remove.packages("rlang", lib="~/R/win-library/3.5")
install_github("vqv/ggbiplot")
#------------------------------------------------------------------------------------------------
library(GAMBoost)
install_github("vqv/ggbiplot")
#Bi-plot
library(devtools)
library(usethis)
install.packages("fs")
library(fs)
#Bi-plot
library(devtools)
library(usethis)
#Bi-plot
library(devtools)
install_github("vqv/ggbiplot")
install_github("vqv/ggbiplot")
install_github("vqv/ggbiplot")
library(ggplot2)
install_github("vqv/ggbiplot")
#Bi-plot
library(devtools)
install_github("vqv/ggbiplot")
